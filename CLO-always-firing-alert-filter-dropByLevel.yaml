apiVersion: v1
kind: Secret
metadata:
  name: logging-loki-s3
  namespace: openshift-logging
stringData:
  access_key_id: <>
  access_key_secret: <>
  bucketnames: lokistoragebucket
  endpoint: https://s3.eu-west-3.amazonaws.com
  region: eu-west-3
---
apiVersion: loki.grafana.com/v1
kind: LokiStack
metadata:
  name: logging-loki
  namespace: openshift-logging
spec:
  managementState: Managed
  rules:
    enabled: true
    namespaceSelector:
      matchLabels:
        openshift.io/log-alerting: 'true'
    selector:
      matchLabels:
        openshift.io/log-alerting: 'true'
  size: 1x.extra-small
  storage:
    schemas:
    - version: v13
      effectiveDate: "2024-03-01"
    secret:
      name: logging-loki-s3
      type: s3
  storageClassName: gp2-csi
  tenants:
    mode: openshift-logging
---
apiVersion: observability.openshift.io/v1alpha1
kind: UIPlugin
metadata:
  name: logging
spec:
  type: Logging
  logging:
    lokiStack:
      name: logging-loki
---
apiVersion: observability.openshift.io/v1
kind: ClusterLogForwarder
metadata:
  annotations:
    observability.openshift.io/log-level: debug
  name: instance
  namespace: openshift-logging
spec:
  serviceAccount:
    name: collector
  outputs:
  - name: default-lokistack
    type: lokiStack
    lokiStack:
      target:
        name: logging-loki
        namespace: openshift-logging
      authentication:
        token:
          from: serviceAccount
    tls:
      ca:
        key: service-ca.crt
        configMapName: openshift-service-ca.crt
  filters:
  - name: dropinfoandwarn
    type: drop
    drop:
    - test:
      - field: .message
        notMatches: "(?i)critical|error"
      - field: .level
        matches: "info|warning|warn|notice"
  pipelines:
  - name: default-logstore
    filterRefs: ["dropinfoandwarn"]
    inputRefs:
    - application
    - infrastructure
    outputRefs:
    - default-lokistack
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns-testapp-logalert
  labels:
    openshift.io/log-alerting: 'true'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: testapp-logalerting
    openshift.io/log-alerting: 'true'
  name: testapp-logalerting
  namespace: ns-testapp-logalert
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testapp-logalerting
  template:
    metadata:
      labels:
        app: testapp-logalerting
    spec:
      containers:
      - image: quay.io/rhobs/testapp-logalerting:latest
        imagePullPolicy: IfNotPresent
        name: testapp-logalerting
---
apiVersion: loki.grafana.com/v1
kind: AlertingRule
metadata:
  name: test-logging-alert
  namespace: ns-testapp-logalert
  labels: 
    openshift.io/log-alerting: 'true'
spec:
  groups:
    - interval: 1m
      name: Testloggingalert
      rules:
        - alert: TestappHighErrorRate
          annotations:
            description: testing1,2
            summary: testing1,2
          expr: >
            sum(rate({kubernetes_namespace_name="ns-testapp-logalert", kubernetes_pod_name=~"testapp-logalerting.*"} |= "error" [1m])) > 0.01 
          for: 1m
          labels:
            severity: critical
  tenantID: application
